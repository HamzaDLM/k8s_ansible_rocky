- hosts: controllers
  remote_user: ansible
  become: yes
  vars:
    ansible_user: ansible
  tasks:
    - name: Update system
      dnf:
        name: epel-release
        state: latest

    - name: Disabling swap on hosts…
      become: yes
      shell: swapoff -a

    - name: Disabling swap from fstab…
      become: yes
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled

    - name: Firewall allow ports
      firewalld:
        permanent: true
        state: enabled
        immediate: true
        port: "{{ item }}/tcp"
      with_items:
        - 6443
        - 2379
        - 2380
        - 10250
        - 10251
        - 10252
        - 10248

    - name: Netfilter
      shell: |
        modprobe br_netfilter
        sh -c "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"
        sh -c "echo '1' > /proc/sys/net/ipv4/ip_forward"
      become: true

    - name: Add Docker repository
      shell: |
        dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
        dnf install docker-ce -y
        systemctl start docker
        systemctl enable docker

    - name: Add Kubernetes repository
      shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
        EOF

    - name: Install kubernetes
      dnf:
        name: "{{ item }}"
        state: present
        disable_excludes: kubernetes
      with_items:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        state: started
        enabled: yes

    - name: Creates kube directory
      file:
        path: /home/kube
        state: directory

    - name: Creating Kube Config File
      become: true
      copy:
        src: /home/jenkinsuser/workspace/init_rocky_to_ansible/kubeadm-config.yaml
        dest: "/home/kube/kubeadm-config.yaml"

    - name: Remove containerd config files
      file:
        state: absent
        path: /etc/containerd/config.toml

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted

    - name: Reboot the machine
      reboot:

    - name: Wait for server to come back online
      wait_for_connection:
        delay: 5
        timeout: 300

    - name: Reset kubeadm in case it was initialized before
      command: kubeadm reset -f
      become: yes
      become_user: root
      delay: 10

    - name: Initialize Kubernetes cluster
      command: kubeadm init --config /home/kube/kubeadm-config.yaml
      become: yes
      become_user: root
      async: 3600
      poll: 5
      register: kubeadm_init_async
      until: kubeadm_init_async.stdout.find("Your Kubernetes control-plane has initialized successfully!") != -1
      retries: 1
      delay: 20

    - name: Print kubeadm init output
      debug:
        var: kubeadm_init_async.stdout_lines

    - name: Create .kube directory
      file:
        path: $HOME/.kube
        state: directory

    - name: Copy admin.conf to .kube/config
      command: cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      timeout: 10

    - name: Change ownership of .kube/config
      file:
        path: $HOME/.kube/config
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: "0644"
